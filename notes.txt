Algorithmic Thinking
- Algorithmic is set of steps to finish a task
- Algorithm follow certain set of guidelines
    - must have a clear problem statement
    - must have clearly defined input and output
    - must contain specific set of instruction in a particular order
    - each step should be distinct and undividable into smaller steps
    - Algorithms must produce a result
    - Algorithm should complete
    - must have consistent results for the same set of input
- Algorithms must be correct
- They are 2 measures of Algorithm efficiency
    - Time complexity
        - amount of time taken to find a result
    - Space complexity
        - amount of space taken up by the Algorithm
Algorith efficiency is measured by looking at the worst case scenario



Linear Search
- is also known as sequential Search
- it works by sequentially going through the items in one by one

Introduction to Big 0
- complexity of Algorithm as a function of the size
- notation to describe complexity
- complexity is the efficiency
- complexity is relative
- is the upper bounds , refers to worst case scenario
- if the number of steps to complete task does not change regardless of input then the time complexity is O(1)
- if the number of operations/steps to complete task increase with same scale as input then the complexity is O(n)
    Types of complexities
    - Linear
    - log n
    - quadratic
    - polynomial
    - constant
    - quisiLinear
    - exponential(Brute force)
    - factorial(travelling salesman)



Recursion and Space complexity
